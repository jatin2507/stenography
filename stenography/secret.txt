const crypto = require('crypto');

function hashValue(value) {
    const hash = crypto.createHash('sha256');
    hash.update(value);
    return hash.digest('hex');
}

function verifyHash(value, hash) {
    const hashedValue = hashValue(value);
    return hashedValue === hash;
}

const originalValue = "hello this is boy"
const hashedValue = hashValue(originalValue);
console.log(`Original Value: ${originalValue}`);
console.log(`Hashed Value: ${hashedValue}`);
console.log(`Verification: ${verifyHash(originalValue, hashedValue)}`);


const algorithm = 'aes-256-cbc';
const key = crypto.randomBytes(32);
const iv = crypto.randomBytes(16);

function encrypt(value) {
    const cipher = crypto.createCipheriv(algorithm, key, iv);
    let encrypted = cipher.update(value, 'utf8', 'hex');
    encrypted += cipher.final('hex');
    return encrypted;
}
function decrypt(encrypted) {
    const decipher = crypto.createDecipheriv(algorithm, key, iv);
    let decrypted = decipher.update(encrypted, 'hex', 'utf8');
    decrypted += decipher.final('utf8');
    return decrypted;
}
const encryptedValue = encrypt(originalValue);
console.log(`Original Value: ${originalValue}`);
console.log(`Encrypted Value: ${encryptedValue}`);
const decryptedValue = decrypt(encryptedValue);
console.log(`Decrypted Value: ${decryptedValue}`);